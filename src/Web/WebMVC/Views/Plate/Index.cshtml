@using Catalog.API.Data
@using WebMVC.Models
@model PaginatedList<PlateModel>

@{
    ViewData["Title"] = "Plates List";
}

<h2>My Plates List</h2>

<p>
    @Html.ActionLink("Create New Plate", "Create")
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RegSortParm"]">Registration</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">PurchasePrice</a>                
            </th>
            <th>
                SalePrice
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Registration)
                </td>
                <td>
                    £@Html.DisplayFor(modelItem => item.PurchasePrice)
                </td>
                <td>
                    £@Html.DisplayFor(modelItem => item.SalePrice)
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !@Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !@Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>